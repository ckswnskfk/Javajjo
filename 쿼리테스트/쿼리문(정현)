---------------------------------- 게시판 ---------------------------------

-- 1:1 건의 게시판 
CREATE TABLE REQUEST_BOARD(

	SEQ NUMBER NOT NULL,
	ID VARCHAR2(12) NOT NULL,
	TITLE VARCHAR(50) NOT NULL,
	CONTENT VARCHAR(500) NOT NULL,
	REFER NUMBER NOT NULL,
	STEP NUMBER NOT NULL,
	REGDATE DATE NOT NULL,
	READCOUNT NUMBER NOT NULL,
	ANSWERED CHAR(1) NOT NULL,
	CONSTRAINT REQUEST_BOARD_PK PRIMARY KEY (SEQ)
);

CREATE SEQUENCE REQUEST_BOARD_SEQ START WITH 1 INCREMENT BY 1;

-- 글 전체 조회(강사, 관리자) / 페이징 추가 
SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
	FROM (SELECT ROWNUM RNUM,SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
			FROM (SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
				FROM REQUEST_BOARD WHERE ANSWERED='N'
					ORDER BY REFER DESC,STEP))
		WHERE RNUM BETWEEN 1 AND 10;

-- 글 전체 조회 갯수(강사,관리자) / 답변 되기 전의 내용이어야 함
SELECT COUNT(*) FROM REQUEST_BOARD WHERE ANSWERED = 'N';

-- 글 상세 조회(강사,관리자)
SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
	FROM REQUEST_BOARD WHERE SEQ = '1';

-- 본인 질문글 조회 (학생) / 페이징 추가
SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
	FROM (SELECT ROWNUM RNUM,SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
			FROM (SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
				FROM REQUEST_BOARD WHERE ID='JAJ'
					ORDER BY REFER DESC,STEP))
		WHERE RNUM BETWEEN 1 AND 10;

-- 본인 질문글 조회 갯수 (학생)
SELECT COUNT(*) FROM REQUEST_BOARD WHERE ID = 'JAJ';
	
-- 글 상세 조회(학생)
SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
	FROM REQUEST_BOARD WHERE SEQ = '1';
	
-- 질문글 작성(학생)
INSERT INTO REQUEST_BOARD
(SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED)
VALUES(REQUEST_BOARD_SEQ.NEXTVAL,'JAJ', '질문제목', '질문내용', 
(SELECT NVL(MAX(REFER),0)+1 FROM REQUEST_BOARD), 0, SYSDATE, 0, 'N');

-- 답변 작성(강사, 관리자)
INSERT INTO REQUEST_BOARD
(SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED)
VALUES(REQUEST_BOARD_SEQ.NEXTVAL,'ADMIN', '답변입니다.', '답변내용', 
(SELECT REFER FROM REQUEST_BOARD WHERE SEQ='1'), (SELECT STEP+1 FROM REQUEST_BOARD WHERE SEQ='1'),
SYSDATE, 0, 'Y');

-- 조회수 증가
UPDATE REQUEST_BOARD SET READCOUNT + 1 WHERE SEQ = '1';

-- 답변 여부 변경 
UPDATE REQUEST_BOARD SET ANSWERED = 'Y' WHERE SEQ = '1';

-- 답변 상세 조회(학생)
SELECT SEQ,ID,TITLE,CONTENT,REFER,STEP,REGDATE,READCOUNT,ANSWERED
	FROM REQUEST_BOARD WHERE REFER = '1' AND STEP='1';


-- 자료게시판 
CREATE TABLE FILE_BOARD(
	SEQ NUMBER NOT NULL,
	ID VARCHAR2(12) NOT NULL,
	TITLE VARCHAR(50) NOT NULL,
	CONTENT VARCHAR(500) NOT NULL,
	REGDATE DATE NOT NULL,
	READCOUNT NUMBER NOT NULL,
	REPORT CHAR(1) NOT NULL,
	FILENAME VARCHAR2(500),
	NEWFILENAME VARCHAR2(500),
	CONSTRAINT FILE_BOARD_PK PRIMARY KEY (SEQ)
);

CREATE SEQUENCE FILE_BOARD_SEQ START WITH 1 INCREMENT BY 1;

-- 글 전체 조회
SELECT SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
FROM (SELECT ROWNUM RNUM ,SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
		FROM FILE_BOARD)
	WHERE RNUM BETWEEN 1 AND 10;

-- 글 상세 조회 
SELECT SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
	FROM FILE_BOARD WHERE SEQ = '3';

-- 글 작성
INSERT INTO FILE_BOARD
(SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME)
VALUES(FILE_BOARD_SEQ.NEXTVAL, '작성자', '자료제목', '자료내용', SYSDATE, 0, 'N', '변경전파일이름','변경후파일이름');

-- 글 수정
UPDATE FILE_BOARD SET TITLE = '새로운제목', CONTENT='새로운내용', FILENAME='새로운파일이름', NEWFILENAME='새로운파일이름';

-- 글 삭제(삭제)
DELETE FROM FILE_BOARD WHERE SEQ IN (1,2);

-- 글 신고
UPDATE FILE_BOARD SET REPORT = 'Y' WHERE SEQ = '3';

-- 조회수 증가
UPDATE FILE_BOARD SET READCOUNT = READCOUNT+1 WHERE SEQ = '3';

-- 신고 여부 초기화
UPDATE FILE_BOARD SET REPORT = 'N' WHERE SEQ = '3';

-- 검색 (작성자)
SELECT SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
	FROM FILE_BOARD WHERE ID = ''
	ORDER BY SEQ DESC;

-- 검색 (제목)
SELECT SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
	FROM FILE_BOARD WHERE TITLE = ''
	ORDER BY SEQ DESC;

-- 검색 (작성자 + 제목)
SELECT SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
	FROM FILE_BOARD WHERE ID = '' AND TITLE=''
	ORDER BY SEQ DESC;


--------------------------------- 회원관리/로그인 ---------------------------------

-- ** 학생 테이블 
CREATE TABLE USERR(
	ID VARCHAR2(12) NOT NULL,
	NAME VARCHAR(10) NOT NULL,
	PW VARCHAR2(20) NOT NULL,
	GENDER CHAR(1) NOT NULL,
	BIRTH DATE,
	ADDR VARCHAR2(100),
	"CHECK" CHAR(1),
	CONSTRAINT USERR PRIMARY KEY (ID)
);

-- ** 강사 테이블 
CREATE TABLE TEACHER(
	ID VARCHAR2(12) NOT NULL,
	NAME VARCHAR2(10) NOT NULL,
	PW VARCHAR2(20) NOT NULL,
	SUB VARCHAR2(100) NOT NULL,
	CONSTRAINT TEACHER PRIMARY KEY(ID)
);

-- ** 과정 테이블 
CREATE TABLE COURSE(
	ID VARCHAR2(12) NOT NULL,
	COURSECODE VARCHAR2(10) NOT NULL,
	COURSENAME VARCHAR2(30) NOT NULL,
	STARTDATE DATE,
	"TIME" NUMBER NOT NULL,
	COURSECNT NUMBER NOT NULL,
	CONSTRAINT COURSE PRIMARY KEY(COURSECODE)
);

DROP TABLE COURSE;

CREATE TABLE USERCOURSE(
	ID VARCHAR(12) NOT NULL, 
	COURSECODE VARCHAR(10) NOT NULL,
	REGDATE DATE NOT NULL 
);

INSERT INTO COURSE
(ID, COURSECODE, COURSENAME, STARTDATE, "TIME", COURSECNT)
VALUES('전민균', 'CODE1', 'JAVA', SYSDATE, 920, 1);

SELECT * FROM USERCOURSE;

INSERT INTO USERR
(ID, NAME, PW, GENDER, BIRTH, ADDR, "CHECK")
VALUES('아이디2', '이정현', '1234', 'M', '', '', 'N');

SELECT ID, NAME, PW, GENDER, BIRTH, ADDR, "CHECK"
	FROM USERR;

-- 로그인
SELECT ID,PW,NAME,"CHECK" FROM USERR WHERE ID='아이디1' AND PW='1234';

-- 비밀번호 초기화
UPDATE USERR SET PW ='12345' WHERE ID='아이디1';



--------------------------------- 회원관리/마이페이지 ---------------------------------
-- ** 학생 ** 

-- 사용자 정보 조회
SELECT U.ID, U.NAME, U.PW, U.GENDER,U.BIRTH,U.ADDR, C.COURSECODE
		FROM USERR U, COURSE C
		WHERE U.ID = C.ID AND U.ID='아이디1';

-- 과정 추가 쿼리
INSERT INTO COURSE (ID, COURSECODE,REGDATE)
VALUES('아이디1', 'JAVA',SYSDATE);
	
-- 사용자 정보 수정
UPDATE USERR SET PW='NEWPW', NAME='NEWNAME', GENDER='F', BIRTH='19980306',ADDR='서울역'
	WHERE ID='아이디1'

-- ** 강사 ** 

-- 사용자 정보 조회 
SELECT ID, NAME, PW, SUB
	FROM TEACHER WHERE ID = '';

-- 사용자 정보 수정
UPDATE TEACHER
SET NAME='NEWNAME', PW='NEWPW', SUB='SUBJECT'
WHERE ID='강사1';

-- 학생 정보 조회하기 (자기 과정 수강중인 학생)
SELECT U.ID, U.NAME, U.PW, U.GENDER, U.BIRTH, U.ADDR, U."CHECK"
	FROM USERR U, USERCOURSE C
	WHERE U.ID = C.ID AND C.COURSECODE='CODE1';

-- 현재 과정에 과목 추가하기 

-- ** 관리자 ** -- 

-- 전체 회원정보 조회 (학생, 강사 따로 구분)  
SELECT ID, NAME, PW, GENDER, BIRTH, ADDR, "CHECK" 
	FROM USERR;

SELECT ID, NAME, PW, SUB
	FROM TEACHER;

-- 신고글 조회 
SELECT SEQ, ID, TITLE, CONTENT, REGDATE, READCOUNT, REPORT, FILENAME, NEWFILENAME
	FROM FILE_BOARD WHERE REPORT='Y';

-- 과정 추가 
INSERT INTO COURSE
(ID, COURSECODE, COURSENAME, STARTDATE, "TIME", COURSECNT)
VALUES('전민균', 'CODE1', 'JAVA', SYSDATE, 920, 1);

-- 회원가입 승인
UPDATE USERR SET "CHECK" = 'Y' WHERE ID IN ('아이디1','아이디2');

-- 회원 삭제(학생, 강사)
DELETE FROM USERR WHERE ID = '';
DELETE FROM TEACHER WHERE ID = '';
