CREATE TABLE STUDENT(
	ID VARCHAR2(12) NOT NULL,
	NAME VARCHAR(10) NOT NULL,
	PW VARCHAR2(100) NOT NULL,
	GENDER CHAR(1) NOT NULL CONSTRAINT GENDER_CHECK CHECK (GENDER IN ('M','F')),
	BIRTH DATE,
	ADDR VARCHAR2(100),
	S_CHECK CHAR(1) DEFAULT 'N',
	DELFLAG CHAR(1) CONSTRAINT DELFLAG_CHECK CHECK (DELFLAG IN ('N', 'Y')),
	CONSTRAINT USERR PRIMARY KEY (ID)
);

CREATE TABLE TEACHER(
	ID VARCHAR2(12) NOT NULL PRIMARY KEY,
	NAME VARCHAR2(10) NOT NULL,
	PW VARCHAR2(100) NOT NULL,
	SUB VARCHAR2(100) NOT NULL
);

CREATE TABLE ADMIN(
	ID VARCHAR2(12) NOT NULL PRIMARY KEY,
	NAME VARCHAR2(10) NOT NULL,
	PW VARCHAR2(100) NOT NULL
);

CREATE TABLE NOTICE_BOARD(
	SEQ NUMBER NOT NULL PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	CONTENT VARCHAR2(500),
	ID VARCHAR2(12),
	REGDATE DATE,
	READCOUNT NUMBER
);
CREATE SEQUENCE NOTICE_BOARD_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE FAQ_BOARD(
	SEQ NUMBER NOT NULL PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	CONTENT VARCHAR2(500),
	ID VARCHAR2(12),
	REGDATE DATE,
	READCOUNT NUMBER
);
CREATE SEQUENCE FAQ_BOARD_SEQ START WITH 1 INCREMENT BY 1;


CREATE TABLE EMPTY_BOARD(
	CODE VARCHAR2(20) NOT NULL PRIMARY KEY,
	NAME VARCHAR2(10) NOT NULL,
	PERSONEL NUMBER
);

CREATE TABLE EMPTY_USER(
	CODE VARCHAR2(20) NOT NULL PRIMARY KEY,
	ID VARCHAR2(12) NOT NULL,
	REGDATE DATE
);

CREATE TABLE REQUEST_BOARD(
	SEQ NUMBER NOT NULL,
	ID VARCHAR2(12) NOT NULL,
	TITLE VARCHAR(50) NOT NULL,
	CONTENT VARCHAR(500) NOT NULL,
	REFER NUMBER NOT NULL,
	STEP NUMBER NOT NULL,
	REGDATE DATE NOT NULL,
	READCOUNT NUMBER NOT NULL,
	ANSWERED CHAR(1) NOT NULL,
	CONSTRAINT REQUEST_BOARD_PK PRIMARY KEY (SEQ)
);
CREATE SEQUENCE REQUEST_BOARD_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE FILE_BOARD(
	SEQ NUMBER NOT NULL,
	ID VARCHAR2(12) NOT NULL,
	TITLE VARCHAR(50) NOT NULL,
	CONTENT VARCHAR(500) NOT NULL,
	REGDATE DATE NOT NULL,
	READCOUNT NUMBER NOT NULL,
	REPORT CHAR(1) NOT NULL,
	FILENAME VARCHAR2(500),
	NEWFILENAME VARCHAR2(500),
	CONSTRAINT FILE_BOARD_PK PRIMARY KEY (SEQ)
);

CREATE TABLE COURSE(
	COURSECODE VARCHAR2(10) NOT NULL PRIMARY KEY,
	COURSENAME VARCHAR2(30) NOT NULL,
	STARTDATE DATE,
	ID VARCHAR2(12) NOT NULL,
	"TIME" NUMBER NOT NULL,
	COURSECNT NUMBER NOT NULL
);

CREATE TABLE SUBJECT(
	SUBJECTCODE VARCHAR2(10) NOT NULL PRIMARY KEY,
	SUBJECTNAME VARCHAR2(30) NOT NULL,
	SUBJECTTYPE VARCHAR2(10) NOT NULL,
	EXAMTYPE VARCHAR2(10) NOT NULL,
	"TIME" NUMBER NOT NULL
);

-- 학생-과정 테이블 연결
CREATE TABLE USERCOURSE(
	ID VARCHAR2(12) NOT NULL,
	COURSECODE VARCHAR2(10) NOT NULL,
	REGDATE DATE NOT NULL
);

CREATE TABLE COURSE_SUBJECT(
	SEQ NUMBER NOT NULL,
	COURSECODE VARCHAR2(10) NOT NULL,
	SUBJECTCODE VARCHAR2(10) NOT NULL,
	"TYPE" VARCHAR2(10) NOT NULL,
	CONTENT VARCHAR2(50),
	SUBJECTTIME NUMBER NOT NULL,
	STARTDATE DATE
);

--과목-과제 연결
CREATE TABLE SUBJECT_EXAM(
	SUBJECTCODE VARCHAR2(10) NOT NULL,
	TESTCODE VARCHAR2(10),
	TESTDAY DATE
);

--문제 유형
--CREATE TABLE EXAMCATEGORY(
--	"TYPE" VARCHAR2(10) NOT NULL PRIMARY KEY,
--	EXAMTYPE VARCHAR2(10) NOT NULL
--);

--과제-문제  연결
CREATE TABLE TEST_EXAM(
	TESTCODE VARCHAR2(10) NOT NULL PRIMARY KEY,
	EXAMCODE VARCHAR2(10) NOT NULL,
	ALLOT NUMBER NOT NULL,
	EXAMNUM NUMBER NOT NULL
);

CREATE TABLE TEST(
	TESTCODE VARCHAR2(10) NOT NULL,
	TESTNAME VARCHAR2(300) NOT NULL,
	SUBJECTTYPE VARCHAR2(10) NOT NULL,
	EXAMTYPE VARCHAR2(10) NOT NULL
);


-- 서술형문제 
CREATE TABLE EXAMDESCRIPTIVE(
	EXAM VARCHAR2(500) NOT NULL,
	EXAMCODE VARCHAR2(10) NOT NULL,
	EXPLANATION VARCHAR2(700),
	STANDARD VARCHAR2(500),
	C_ANSWER VARCHAR2(500) NOT NULL
);

--서술형 답
CREATE TABLE ANSWERDESCRIPTIVE(
	ID VARCHAR2(12) NOT NULL,
	EXAMCODE VARCHAR2(10) NOT NULL,
	EXAMNUM NUMBER NOT NULL,
	ANSWER VARCHAR2(700) NOT NULL,
	ORIGINFILE VARCHAR2(500),
	NEWFILENAME VARCHAR2(500)
);

--선택형 문제
CREATE TABLE EXAMSELECT(
	EXAM VARCHAR2(500) NOT NULL,
	EXAMCODE VARCHAR2(10) NOT NULL,
	C_ANSWER NUMBER NOT NULL
);

-- 선택형 문항
CREATE TABLE CONTENTSELECT(
	EXAMCODE VARCHAR2(10) NOT NULL,
	EXAMNUM NUMBER NOT NULL,
	EXAMCONTENT VARCHAR2(500) NOT NULL
);

--선택형 답 
CREATE TABLE ANSWERSELECT(
	ID VARCHAR2(12) NOT NULL,
	EXAMCODE VARCHAR2(10) NOT NULL,
	EXAMNUM NUMBER NOT NULL,
	ANSWER NUMBER NOT NULL
);

-- 성적 테이블
CREATE TABLE SCORE(
	ID VARCHAR2(12) PRIMARY KEY NOT NULL,
	EXAMCHECK CHAR(1) DEFAULT 'N' CONSTRAINT EXAMCHECK_CHECK CHECK (EXAMCHECK IN ('N','S','Y')),
	TESTCODE VARCHAR2(30) NOT NULL,
	EXAMCODE VARCHAR2(10),
	SCORE NUMBER
);

 -- 전자결재
-- 테이블 생성
-- 결석 신청 테이블 생성
CREATE TABLE APP_FORM(
	FORM_SEQ NUMBER NOT NULL,
	APP_DATE DATE NOT NULL,
	STUDENT_ID VARCHAR2(12) NOT NULL,
	RECIPIENT_ID VARCHAR2(12) NOT NULL,
	COURSECODE VARCHAR2(10) NOT NULL,
	REASON VARCHAR2(50) NOT NULL,
	START_DATE DATE NOT NULL,
	ABSENT_DAYS NUMBER NOT NULL, -- START_DATE + ABSENT_DAYS - 1 = 마지막 결석일
	FILENAME VARCHAR2(500),
	NEWFILENAME VARCHAR2(500),
	CONSTRAINT APP_FORM_PK PRIMARY KEY(FORM_SEQ)
);

-- 신청서 SEQ 생성
CREATE SEQUENCE APP_FORM_SEQ INCREMENT BY 1 START WITH 1;



-- 승인 여부 테이블 
CREATE TABLE IS_APPROVE(
	FORM_SEQ NUMBER NOT NULL,
	STM CHAR DEFAULT 'N' NOT NULL,
	CONSTRAINT IS_APPROVE_PK PRIMARY KEY(FORM_SEQ)
);

-- 사인 테이블 생성
CREATE TABLE SIGNATURE(
	SIGNATURE_ID VARCHAR2(12) NOT NULL,
	USECHECK CHAR NOT NULL,
	FILENAME VARCHAR2(500) NOT NULL,
	NEWFILENAME VARCHAR2(500) NOT NULL,
	CONSTRAINT SIGNATURE_PK PRIMARY KEY(SIGNATURE_ID)
);

-- 반려 사유 테이블 생성
CREATE TABLE UNAPPROVED(
	FORM_SEQ NUMBER NOT NULL,
	REASON VARCHAR2(100),
	CONSTRAINT UNAPPROVED_PK PRIMARY KEY(FORM_SEQ)
);

CREATE TABLE ATTENDEDCHECK(
	SEQ NUMBER NOT NULL,
	A_CHECK CHAR(1) NOT NULL CONSTRAINT A_CHECK_CHECK CHECK (A_CHECK IN ('N','Y','L','E')), --결석은 N, 출석은 Y, 지각은 L, 조퇴는 E
	ID VARCHAR2(12) NOT NULL,
	REGDATE DATE NOT NULL, 
	START_TIME DATE NOT NULL,
	FINISH_TIME DATE NOT NULL,
	CONSTRAINT ATTENDEDCHECK_PK PRIMARY KEY(SEQ)
);

